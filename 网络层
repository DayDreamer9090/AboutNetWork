# 网络层

[toc]

**网络层功能：向上提供，无连接的，尽最大努力交付的数据报服务**

## 中继系统

+ 网络层以上：网关
+ 网络层：路由器
+ 数据链路层：网桥，交换机
+ 物理层：中继器，集线器

```mermaid
graph LR
路由器功能-->路由选择
路由器功能-->分组转发
```

+ 路由选择：定期更新路径，动态改变所选择的路由
+ 分组转发：左手转右手

## 拥塞控制

网络上分组太多，堵了，大量超时重传，效率急剧下降；

可以用网络负载和吞吐量判断是否有阻塞现象发生；

```mermaid
graph LR
拥塞控制方法-->开环控制=静态,提前设计调度策略
拥塞控制方法-->闭环控制=动态,检测网络状态,适时调整
```

## 路由算法

### 静态路由（非自适应路由算法）

人手配置的，死的，适用于简单小型网络。

开销小。

### 动态路由（自适应路由算法）

路由器们的路由表，自己相互交换信息，然后按照算法优化，不断更新。

~~It looks good on paper.~~

理论上很好，但算法复杂可能加重网络负担。

```mermaid
graph LR
动态路由算法--->距离-向量路由算法
动态路由算法--->链路状态路由算法
```



#### 距离-向量算法





#### 链路状态路由算法



### 层次路由

网上的路由太多了，全是平级就会有消息不停地无效传来传去，不方便。

划分成多个大大小小的自治系统（一个自治系统包括很多局域网），**每个自治系统自己决定采用何种路由选择协议**。

两个之子系统通信的时候，还有一种用来解决这两个系统之间差异的协议。

```mermaid
graph LR
路由选择算法-->内部网关协议=一个自治系统内部的
路由选择算法-->外部网关协议
```

注意：

网关为网络层之上划分的；

网桥和交换机是数据链路层划分的；



**OSPF**将一个自治系统再划分多个区域，每个路由器（网络层划分用）详细地知道**本区域**怎么传分组，**不**知道其他区域内部结构。因此，ospf适用于比较大的自治系统。（小的自治系统分块没意义，且增加算法开销）



## IPV4

#### IP数据报格式

首部固定部分20B，有可选的变长部分，可选的用不用在固定部分里有位置会说明。

有一个点，三个bit标志位+偏移量，用来分片的。

偏移量是从这段是从哪个地址开始算的，如从0开。





#### 最大传送单元MTU

把一整个ip数据报，分成（ip首部+部分）*n。

因为是分组传输，一个组不易太大，否则会有很高的传播时延（？还是传输，反正是路由器转发要重发的那个时延，分组只要等一组，报文的话要等一整个大报文）

